import os
os.system('cls')

# Задача: предложить улучшения кода для уже решённых задач:
# С помощью использования **лямбд, filter, map, zip, enumerate,
# list comprehension(4 задачи из прошлых семинаров переделать
# с использованием этих функций)

# НЕ ПОЛУЧИЛОСЬ ПРЕОБРАЗОВАТЬ



# !!!!ДЗ достаточный для зачета!!!!! сдайте те задачи что мы разбирали на семинаре.

# 1.Вводится список целых чисел в одну строчку через пробел.
# Необходимо оставить в нем только двузначные числа. Реализовать
# программу с использованием функции filter. Результат отобразить
# на экране в виде последовательности оставшихся чисел в одну
# строчку через пробел.
# пример - 8 11 0 -23 140 1 => 11 -23

# string = list(filter(lambda x: len(str(abs(int(x))))==2, input('Введите через пробел числа: ').split()))
# print(*string)

# len(str(abs(int(x))):
# int - переводим изначально понимаемую строку в число
# abs - переводим число в абсолют - число воспринимается как положительное
# str - переводим число обратно в строку
# len - узнаем длину строки

# или такое решение
# num = input().split()
# x = list(filter i: (-99 <= int(i) <= -10) or (10 <= int(i) <= 99), num)
# print(*x)


# 2. Дан список, вывести отдельно буквы и цифры.
# a = ( "a", 'b', '2', '3' ,'c')
# результат:
# b = ( 'a' , 'b' , 'c')
# c = ( '2', '3')

# a = ( "a", 'b', '2', '3' ,'c')
# string = []
# number = []
# for i in a:
#     if i.isdigit():
#         number.append(i)
#     else:
#         string.append(i)
# print(string)
# print(number)

# или такое решение
# a = ( "a", 'b', '2', '3' ,'c')
# b = filter(str.isalpha, a) # isalpha - является ли текстом
# c = filter(str.isdigit, a) # isdigit - является ли числом
# print(*b)
# print(*c)


# Преобразовать набор списков
# users = ['user1','user2','user3','user4','user5']
# ids = [4, 5, 9, 14, 7]
# salary = [111,222,333]
# в другой набор
# ['user1', 4, 111]
# ['user2', 5, 222]
# ['user3', 9, 333]
# и потом вернуть в исходное состояние
# ['user1', 'user2', 'user3']
# [4, 5, 9]
# [111, 222, 333]

# users = ['user1','user2','user3','user4','user5']
# ids = [4, 5, 9, 14, 7]
# salary = [111, 222, 333]
# a, b, c = map(list, zip(users, ids, salary))
# print(a,b,c, sep='\n') #sep - между списками будет переход на след.строку
# a, b, c = map(list, zip(a, b, c))
# print(a,b,c, sep='\n') #sep - между списками будет переход на след.строку

